8/9 - 
    09:30 - adding 'back of napkin' wireframes for each possible page the user is going to
            come accross.
    13:34 - finished adding the greybox wireframe for the questions pages. Button is now
            functioning.
    19:41 - add button to the questions pages (DOM).

8/14 -
    10:24 - taking out the javascript for greybox wireframes. Will nav through html pages.

8/15-8/16 - BDD
    Jump from question to question -

    -when I click "let's find out" button then I can see a question with answers
    -when I see list of answers, I should be able to click on them
    -once an answer is selected, it is recorded and I'm able to click on the NEXT button to view the next
     question.
    -this will repeat for all five questions.
    -on question #5, once an answer is selected, I will be able to click the DONE button, which will take
     me to the feedback pages, where I'll see the breakdown of all the questions I got right or wrong. 
     wrong answers will also have the correct answers next to them.
    -I'll then be able to click the SCORE button, to see overall score I got on the quiz (should I switch 
     this with previous step? Score before Feedback?) 
    -Click the Restart button to start over again.

8/19 - made first question page with multiple choice answers. When should I implement the answer validation?
8/20 - 
9/4 - implement answer validation 
    
        when I click on answer option it should prompt me
            -if correct, let them know
                -add 1 to score (out of 5)
            -if incorrect, let them know 
                -keep score same (out of 5)
        Be directed to next question

9/5-9/10 Implementing above and more...

9/11 - Functionality of quiz is complete, except for one aspect: rendering the score onto the screen
       Once that is complete, go over: 1. semantic HTML, along with CSS and jQuery 
                                       2. a11y best practices 
                                       3. responsive design 
                                       4. keyboard-only usability
                                       5. add css: photos, fonts, etc...